@import "_helpers/variables";

/*===========================
           MIXINS

=========   Contents   =======

    1,     + font styles

    2,     + color themes

    3,     + margin     + padding
             
    4,   

===============================*/


//  +   font styles
//--------------------------------------------

@mixin font-family--handwritten($textCol: map-get($map: $color, $key: white)){
    .handwritten{
        color: $textCol;
        font-family: $font-family-handwriting;
        font-size: 28px;
        display: inline-block;    
        margin-bottom: 0px;
    }
}

@mixin font-color--all($textCol){
    h1,h3,h4,p,li,a{
        color: $textCol;
    }

    .lead--custom{
        color: $textCol;
    }
}

@mixin font-family--base(){
    h1{
        font-family: $font-family-heading;
    }

    h3{
        font-family: $font-family-heading;
    }

    h4{
        font-family: $font-family-heading;
    }

    p{
        font-family: $font-family-base;
    }

    li{
        font-family: $font-family-base;
    }

    a{
        font-family: $font-family-base;
    }

    .lead--custom {
        font-family: $font-family-handwriting;
    }
}

//  + color themes
//--------------------------------------------

@mixin colorTheme--base{
    background-color: map-get($map: $color, $key: light);
    color: map-get($map: $color, $key: dark);
}

@mixin colorTheme--base-dark{
    background-color: map-get($map: $color, $key: base);
    color: map-get($map: $color, $key: light);
}

@mixin colorTheme--invert{
    background-color: map-get($map: $color, $key: dark);
    color: map-get($map: $color, $key: light);
}

@mixin colorTheme--invert-light{
    background-color: map-get($map: $color, $key: dark);
    color: map-get($map: $color, $key: base);
}

@mixin colorTheme--invert-white{
    background-color: map-get($map: $color, $key: white);
    color: map-get($map: $color, $key: dark);
}

@mixin colorTheme--contrast{
    background-color: map-get($map: $color, $key: contrast);
    color: map-get($map: $color, $key: white);
}

@mixin backgroundGradient--body{
    background: rgba(255,255,255,1);
    background: -moz-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,0.7) 47%, rgba(237,237,237,0.37) 100%);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(255,255,255,1)), color-stop(47%, rgba(246,246,246,0.7)), color-stop(100%, rgba(237,237,237,0.37)));
    background: -webkit-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,0.7) 47%, rgba(237,237,237,0.37) 100%);
    background: -o-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,0.7) 47%, rgba(237,237,237,0.37) 100%);
    background: -ms-linear-gradient(top, rgba(255,255,255,1) 0%, rgba(246,246,246,0.7) 47%, rgba(237,237,237,0.37) 100%);
    background: linear-gradient(to bottom, rgba(255,255,255,1) 0%, rgba(246,246,246,0.7) 47%, rgba(237,237,237,0.37) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ededed', GradientType=0 );
}



//  + margin     + padding
//--------------------------------------------

@mixin marginRow--base($top: 15px, $bottom: 15px){
    margin-top: $top;
    margin-bottom: $bottom;
}

@mixin paddingRow--base($top: 15px, $bottom: 15px){
    padding-top: $top;
    padding-bottom: $bottom;
}

@mixin paddingCol--xs{
    padding: 0px 30px;
}

//   + media queries
//--------------------------------------------

@mixin media($breakpoint){

    @media screen and (min-width: $breakpoint){
        @content;
    };
};

